创建型模式： 工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
结构型模式： 适配器模式、装饰模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
行为型模式： 策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。


1. 策略模式： 略模式可以用于处理复杂的 if-else 代码, 新的策略方法无需改变已有代码!在 js 中可以构建一个存储策略函数的对象, 根据入参决定使用哪一个策略函数

2. 工厂方法模式：工厂方法模式定义了一个创建对象的接口, 但是由子类决定要实例化的类是哪一个。可以将对象的创建和使用分离

3. 抽象工厂模式: 抽象工厂模式提供了一种封装一组具有相同主题的单个工厂的方式。它有一个接口, 用于创建相关或依赖对象的家族, 而不需要指定实际实现的类。

4. 单例模式: 单例模式的目的是确保一个类只有一个实例, 并为该实例提供全局访问点, 判断该实例是否已存在, 若否则实例化, 是则直接返回该实例