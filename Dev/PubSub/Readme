发布订阅的主要思路：
    1. 在一个中介者上定义: 订阅(listen/on)、取消订阅(off/remove)、发布(trigger/emit)、订阅列表(bus/eventList) 三个主要函数以及一个存储订阅的数据结构
    2. 调用listen/on进行订阅, 将传入的 fn 存储到订阅列表的 key 中 (bus[key]为 fn 数组)
    3. 调用remove, 若存在则删去该 fn
    4. 调用发布来执行该 key 值的全部回调函数

发布订阅的缺点：
    1. 创建订阅者本身要消耗一定的时间和内存
    2. 订阅者会始终存在于内存中
    3. 程序难以跟踪数据来源

发布订阅进阶：
    1. 必须先订阅再发布吗？
    2. 建立一个存放离线事件的堆栈, 在订阅时检查离线事件, 若存在则调用